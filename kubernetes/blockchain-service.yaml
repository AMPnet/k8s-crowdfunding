apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    tier: backend
    app: blockchain
  name: blockchain-service-deployment
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: blockchain
  template:
    metadata:
      labels:
        tier: backend
        app: blockchain
    spec:
      containers:
      - env:
        - name: NODE_ENV
          value: testnet
        - name: DB_HOST
          value: db
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: ae_middleware_testnet
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: service-secret
              key: blockchain-service.db.username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: service-secret
              key: blockchain-service.db.password
        - name: QUEUE_DB_HOST
          value: db
        - name: QUEUE_DB_PORT
          value: "5432"
        - name: QUEUE_DB_NAME
          value: ae_middleware_testnet
        - name: QUEUE_DB_USER
          valueFrom:
            secretKeyRef:
              name: service-secret
              key: blockchain-service.queue-db.username
        - name: QUEUE_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: service-secret
              key: blockchain-service.queue-db.password
        # TODO: set Aeternity node config
        - name: NODE_URL
          value: http://ae-node:3013
        - name: NODE_INTERNAL_URL
          value: http://ae-node:3113
        - name: COMPILER_URL
          value: http://sophia-compiler:3080
        - name: NETWORK_ID
          value: ae_docker
        - name: GIFT_AMOUNT
          value: "0.3"
        image: ampnet/crowdfunding-ae-middleware:latest
        imagePullPolicy: Always
        name: blockchain-service
        ports:
        - containerPort: 8124
        readinessProbe:
          httpGet:
             path: /info
             port: 8124
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 5
        resources: 
          limits:
            memory: 512Mi
          requests: 
            memory: 64Mi
      imagePullSecrets:
      - name: myregistrykey
      restartPolicy: Always
status: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    tier: backend
    app: blockchain
  name: blockchain-service-api
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/prometheus'
spec:
  selector:
    app: blockchain
  ports:
  - name: "8124"
    port: 8124
    targetPort: 8124
  type: NodePort
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  name: blockchain-service
  labels:
    tier: backend
    app: blockchain
spec:
  selector:
    app: blockchain
  ports:
  - name: "8224"
    port: 8224
