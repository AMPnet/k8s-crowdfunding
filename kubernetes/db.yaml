apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    tier: backend
    app: db
  name: postgres-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    tier: backend
    app: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        tier: backend
        app: db
    spec:
      containers:
      - image: ampnet/crowd-db:0.4
        name: db
        ports:
        - containerPort: 5432
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-data
      imagePullSecrets:
      - name: myregistrykey
      restartPolicy: Always
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-data
status: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    tier: backend
    app: db
  name: db
spec:
  ports:
  - name: "5432"
    port: 5432
    targetPort: 5432
  selector:
    app: db
  type: NodePort
status:
  loadBalancer: {}
